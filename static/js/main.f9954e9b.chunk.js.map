{"version":3,"sources":["component/fontawesome.js","component/SetTimer.js","App.js","reportWebVitals.js","index.js"],"names":["library","add","faPlus","faMinus","faPlay","faPause","faSync","SetTimer","props","id","title","toLowerCase","className","onClick","handleDecrease","icon","count","handleIncrease","audio","document","getElementById","App","state","breakCount","sessionCount","clockCount","currentTimer","isPlaying","handlePlayPause","clearInterval","loop","setState","setInterval","play","handleReset","pause","currentTime","convertToTime","minutes","Math","floor","seconds","handleBreakIncrease","handleBreakDecrease","handleSessionIncrease","handleSessionDecrease","undefined","this","breakProps","sessionProps","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f9954e9b.chunk.js","sourcesContent":["import { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faPlus, faMinus, faPlay, faPause, faSync } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faPlus, faMinus, faPlay, faPause, faSync)\r\n\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n\r\nconst SetTimer = (props) => {\r\n    const id = props.title.toLowerCase();\r\n    return (\r\n        <div className = \"timer-container\">\r\n            <h2 id={`${id}-label`}>\r\n                {props.title} Length\r\n            </h2>\r\n            <div className=\"flex actions-wrapper\">\r\n                <button id={`${id}-decrement`} onClick={props.handleDecrease}>\r\n                    <FontAwesomeIcon icon = \"minus\" />\r\n                </button>\r\n                    <span id={`${id}-length`}>{props.count}</span>\r\n                <button id={`${id}-increment`} onClick={props.handleIncrease}> \r\n                <FontAwesomeIcon icon = \"plus\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetTimer; ","import React from \"react\"\nimport \"./component/fontawesome\"\nimport './App.css';\nimport SetTimer from './component/SetTimer'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst audio = document.getElementById(\"beep\");\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loop = undefined;\n  }\n  \n  state = {\n    breakCount : 5,\n    sessionCount : 25,\n    clockCount: 25 * 60,\n    currentTimer : 'Session',\n    isPlaying: false\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.loop);\n  }\n\n  handlePlayPause = () => {\n    const { isPlaying } = this.state;\n\n    if(isPlaying) {\n      clearInterval(this.loop)\n\n      this.setState({\n        isPlaying: false\n      });\n    } else {\n      this.setState({\n        isPlaying: true\n      });\n\n      this.loop = setInterval(()=> {\n        const { \n          clockCount, \n          currentTimer, \n          breakCount, \n          sessionCount \n        } = this.state;\n        \n        if(clockCount === 0) {\n          this.setState({\n            currentTimer: (currentTimer === 'Session') ? 'Break':'Session',\n            clockCount : (currentTimer === 'Session') ? (breakCount * 60) : (sessionCount * 60)\n          })\n\n          audio.play();\n          \n        } else {\n          this.setState({\n            clockCount: clockCount - 1\n          });\n        }\n      }, 1000);\n    }\n  }\n\n  handleReset = () => {\n    this.setState({\n      breakCount : 5,\n      sessionCount : 25,\n      clockCount: 25 * 60,\n      currentTimer : 'Session',\n      isPlaying: false\n    })\n\n    clearInterval(this.loop);\n    audio.pause();\n    audio.currentTime = 0;\n  }\n\n  \n  convertToTime = (count) => {\n    let minutes = Math.floor(count / 60);\n    let seconds = count % 60;\n\n    minutes = minutes < 10 ? ('0'+minutes) : minutes;\n    seconds = seconds < 10 ? ('0'+seconds) : seconds;\n\n    return `${minutes}:${seconds}`; \n  }\n\n  handleBreakIncrease = () => {\n    const { breakCount, isPlaying, currentTimer  } = this.state;\n\n    if(breakCount < 60) {\n      if(!isPlaying && currentTimer === 'Break') {\n        this.setState({\n          breakCount : breakCount + 1,\n          clockCount: (breakCount + 1) * 60\n        });\n      } else {\n        this.setState({\n          breakCount : breakCount + 1\n        });\n      }\n    }\n  }\n\n  handleBreakDecrease = () => {\n    const { breakCount, isPlaying, currentTimer } = this.state;\n\n    if(breakCount > 1) {\n      if(!isPlaying && currentTimer === 'Break') {\n        this.setState({\n          breakCount : breakCount - 1,\n          clockCount: (breakCount - 1) * 60\n        });\n      } else {\n        this.setState({\n          breakCount : breakCount - 1\n        });\n      }\n    }\n  }\n\n  handleSessionIncrease = () => {\n    const { sessionCount, isPlaying, currentTimer } = this.state;\n\n    if(sessionCount < 60) {\n      \n      if(!isPlaying && currentTimer === 'Session') {\n        this.setState({\n          sessionCount : sessionCount + 1,\n          clockCount: (sessionCount + 1) * 60\n        });\n      } else {\n        this.setState({\n          sessionCount : sessionCount + 1\n        })\n      }\n    }\n  }\n\n  handleSessionDecrease = () => {\n    const { sessionCount, isPlaying, currentTimer } = this.state;\n\n    if(sessionCount > 1) {\n      if(!isPlaying && currentTimer === 'Session') {\n        this.setState({\n          sessionCount : sessionCount - 1,\n          clockCount: (sessionCount - 1) * 60\n        });\n      } else {\n        this.setState({\n          sessionCount : sessionCount - 1\n        })\n      }\n    }\n  }\n\n\n  render() {\n\n    const {\n      breakCount, sessionCount, clockCount, currentTimer, isPlaying // eslint-disable-next-line\n      } = this.state;\n\n    const breakProps = {\n      title: 'Break',\n      count: breakCount,\n      handleDecrease: this.handleBreakDecrease,\n      handleIncrease: this.handleBreakIncrease\n    }\n    const sessionProps = {\n      title: 'Session',\n      count: sessionCount,\n      handleDecrease: this.handleSessionDecrease,\n      handleIncrease: this.handleSessionIncrease\n    }\n    \n    return (\n      <div className=\"App\">\n        <h1>Pomodoro Clock</h1>\n        <div className = \" flex\">\n          <SetTimer {...breakProps} />\n          <SetTimer {...sessionProps} />\n        </div>\n        <div className=\"clock-container\">\n            <h1 id=\"timer-label\">{currentTimer}</h1>\n            <span id=\"time-left\">{this.convertToTime(clockCount)}</span>\n            \n          <div className =\"flex\">\n                <button id=\"start_stop\" onClick={this.handlePlayPause}>\n                    <FontAwesomeIcon icon = {`${isPlaying ? \"pause\" : \"play\"}`} />\n                </button>\n                <button id=\"reset\" onClick={this.handleReset}>\n                    <FontAwesomeIcon icon = \"sync\" />\n                </button>\n          </div>\n        </div>        \n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}